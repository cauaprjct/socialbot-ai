version: '3.8'

services:
  # Aplicação principal
  socialbot-ai:
    build: .
    container_name: socialbot-ai
    ports:
      - "8000:8000"  # FastAPI
      - "8501:8501"  # Streamlit
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://socialbot:socialbot123@postgres:5432/socialbot
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./credentials:/app/credentials
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - socialbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: socialbot-postgres
    environment:
      POSTGRES_DB: socialbot
      POSTGRES_USER: socialbot
      POSTGRES_PASSWORD: socialbot123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - socialbot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U socialbot -d socialbot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache e filas
  redis:
    image: redis:7-alpine
    container_name: socialbot-redis
    command: redis-server --appendonly yes --requirepass socialbot123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - socialbot-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Prometheus para métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: socialbot-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - socialbot-network

  # Grafana para dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: socialbot-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=socialbot123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - socialbot-network
    depends_on:
      - prometheus

  # Nginx para proxy reverso
  nginx:
    image: nginx:alpine
    container_name: socialbot-nginx
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    networks:
      - socialbot-network
    depends_on:
      - socialbot-ai

  # Worker para tarefas em background
  worker:
    build: .
    container_name: socialbot-worker
    command: celery -A src.main worker --loglevel=info
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://socialbot:socialbot123@postgres:5432/socialbot
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./credentials:/app/credentials
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - socialbot-network

  # Scheduler para tarefas agendadas
  scheduler:
    build: .
    container_name: socialbot-scheduler
    command: celery -A src.main beat --loglevel=info
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://socialbot:socialbot123@postgres:5432/socialbot
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - socialbot-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  socialbot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16